{
  "openapi": "3.1.0",
  "info": {
    "title": "Face Recognition System API",
    "description": "\n        ## 人脸识别系统 API\n\n        这是一个完整的人脸识别和门禁控制系统的RESTful API。\n\n        ### 主要功能\n        - **人员管理**: 添加、更新、删除和搜索人员信息\n        - **人脸特征管理**: 上传人脸图像，提取和管理人脸特征\n        - **实时人脸识别**: 识别和验证人脸身份\n        - **门禁控制**: 基于人脸识别的访问控制\n        - **统计报告**: 访问日志分析和统计报告\n        - **用户管理**: 系统用户和权限管理\n        - **系统管理**: 系统配置、备份和监控\n\n        ### 认证方式\n        API使用JWT (JSON Web Token) 进行认证。获取令牌后，在请求头中包含：\n        ```\n        Authorization: Bearer <your_access_token>\n        ```\n\n        ### 权限系统\n        - **read**: 读取权限 - 可以查看数据\n        - **write**: 写入权限 - 可以创建和修改数据\n        - **admin**: 管理员权限 - 可以执行所有操作\n\n        ### 速率限制\n        - 匿名用户: 100 请求/分钟\n        - 认证用户: 200 请求/分钟\n        - 管理员: 500 请求/分钟\n\n        ### 默认账户\n        - 管理员: `admin` / `admin123`\n        - 普通用户: `user` / `user123`\n        ",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "开发环境"
    },
    {
      "url": "https://api.example.com",
      "description": "生产环境"
    }
  ],
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Login",
        "description": "User login endpoint.\nAuthenticates user and returns JWT tokens.",
        "operationId": "login_api_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCredentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.",
        "operationId": "refresh_token_api_v1_auth_refresh_post",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information.",
        "operationId": "get_current_user_info_api_v1_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout",
        "description": "User logout endpoint.\nIn a production system, this would invalidate the token.",
        "operationId": "logout_api_v1_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Register User",
        "description": "Register a new user.\nOnly admin users can register new users.",
        "operationId": "register_user_api_v1_auth_register_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Password"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "full_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/permissions": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Get Available Permissions",
        "description": "Get list of available permissions.",
        "operationId": "get_available_permissions_api_v1_auth_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/auth/validate-token": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Validate Token",
        "description": "Validate current token and return user info.",
        "operationId": "validate_token_api_v1_auth_validate_token_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/users/": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "List Users",
        "description": "List all users.\nOnly admin users can access this endpoint.",
        "operationId": "list_users_api_v1_users__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserInfo"
                  },
                  "title": "Response List Users Api V1 Users  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-management"
        ],
        "summary": "Create User",
        "description": "Create a new user.\nOnly admin users can create new users.",
        "operationId": "create_user_api_v1_users__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Password"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "full_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "read"
              ],
              "title": "Permissions"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User",
        "description": "Get user by ID.\nOnly admin users can access this endpoint.",
        "operationId": "get_user_api_v1_users__user_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user-management"
        ],
        "summary": "Update User",
        "description": "Update user information.\nOnly admin users can update users.",
        "operationId": "update_user_api_v1_users__user_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "full_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Name"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Permissions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-management"
        ],
        "summary": "Delete User",
        "description": "Delete user.\nOnly admin users can delete users.",
        "operationId": "delete_user_api_v1_users__user_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/change-password": {
      "post": {
        "tags": [
          "user-management"
        ],
        "summary": "Change User Password",
        "description": "Change user password.\nOnly admin users can change other users' passwords.",
        "operationId": "change_user_password_api_v1_users__user_id__change_password_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "new_password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/users/{user_id}/sessions": {
      "get": {
        "tags": [
          "user-management"
        ],
        "summary": "Get User Sessions",
        "description": "Get active sessions for a user.\nOnly admin users can view user sessions.",
        "operationId": "get_user_sessions_api_v1_users__user_id__sessions_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/": {
      "get": {
        "tags": [
          "persons"
        ],
        "summary": "List Persons",
        "description": "List persons with optional filtering and pagination.\nReturns a paginated list of persons with optional filters.",
        "operationId": "list_persons_api_v1_persons__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "persons"
        ],
        "summary": "Create Person",
        "description": "Create a new person.\nCreates a new person record with the provided information.",
        "operationId": "create_person_api_v1_persons__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faces/upload": {
      "post": {
        "tags": [
          "faces"
        ],
        "summary": "Upload Face Image",
        "description": "Upload a face image for a person.\nProcesses the uploaded image, detects faces, extracts features,\nand stores them in the database.",
        "operationId": "upload_face_image_api_v1_faces_upload_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceFeatureUpload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/faces/upload-file": {
      "post": {
        "tags": [
          "faces"
        ],
        "summary": "Upload Face File",
        "description": "Upload a face image file for a person.\nProcesses the uploaded file, detects faces, extracts features,\nand stores them in the database.",
        "operationId": "upload_face_file_api_v1_faces_upload_file_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Person Id"
            }
          },
          {
            "name": "set_as_primary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Set as primary face",
              "default": false,
              "title": "Set As Primary"
            },
            "description": "Set as primary face"
          },
          {
            "name": "quality_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0,
              "description": "Quality threshold",
              "default": 0.7,
              "title": "Quality Threshold"
            },
            "description": "Quality threshold"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_face_file_api_v1_faces_upload_file_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faces/person/{person_id}": {
      "get": {
        "tags": [
          "faces"
        ],
        "summary": "Get Person Faces",
        "description": "Get all face features for a person.\nReturns all face features associated with the specified person.",
        "operationId": "get_person_faces_api_v1_faces_person__person_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Person Id"
            }
          },
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inactive features",
              "default": false,
              "title": "Include Inactive"
            },
            "description": "Include inactive features"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FaceFeatureResponse"
                  },
                  "title": "Response Get Person Faces Api V1 Faces Person  Person Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/faces/{feature_id}": {
      "get": {
        "tags": [
          "faces"
        ],
        "summary": "Get Face Feature",
        "description": "Get a specific face feature by ID.\nReturns detailed information about a face feature.",
        "operationId": "get_face_feature_api_v1_faces__feature_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Feature Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "faces"
        ],
        "summary": "Update Face Feature",
        "description": "Update a face feature.\nUpdates the specified face feature with the provided data.",
        "operationId": "update_face_feature_api_v1_faces__feature_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Feature Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceFeatureUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceFeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "faces"
        ],
        "summary": "Delete Face Feature",
        "description": "Delete a face feature.\nSoft deletes (deactivates) or hard deletes a face feature.",
        "operationId": "delete_face_feature_api_v1_faces__feature_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "feature_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Feature Id"
            }
          },
          {
            "name": "hard_delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Permanently delete feature",
              "default": false,
              "title": "Hard Delete"
            },
            "description": "Permanently delete feature"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access/attempt": {
      "post": {
        "tags": [
          "access"
        ],
        "summary": "Process Access Attempt",
        "description": "Process an access attempt.\nValidates access permissions and logs the attempt.",
        "operationId": "process_access_attempt_api_v1_access_attempt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAttemptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/access/logs": {
      "get": {
        "tags": [
          "access"
        ],
        "summary": "Get Access Logs",
        "description": "Get access logs with filtering and pagination.\nReturns a paginated list of access logs with optional filters.",
        "operationId": "get_access_logs_api_v1_access_logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by person ID",
              "title": "Person Id"
            },
            "description": "Filter by person ID"
          },
          {
            "name": "location_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by location ID",
              "title": "Location Id"
            },
            "description": "Filter by location ID"
          },
          {
            "name": "access_granted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by access result",
              "title": "Access Granted"
            },
            "description": "Filter by access result"
          },
          {
            "name": "access_method",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by access method",
              "title": "Access Method"
            },
            "description": "Filter by access method"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLogListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access/logs/{log_id}": {
      "get": {
        "tags": [
          "access"
        ],
        "summary": "Get Access Log",
        "description": "Get a specific access log by ID.\nReturns detailed information about an access log entry.",
        "operationId": "get_access_log_api_v1_access_logs__log_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "log_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Log Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLogResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access/person/{person_id}/logs": {
      "get": {
        "tags": [
          "access"
        ],
        "summary": "Get Person Access Logs",
        "description": "Get access logs for a specific person.\nReturns access history for the specified person.",
        "operationId": "get_person_access_logs_api_v1_access_person__person_id__logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Person Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          },
          {
            "name": "access_granted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by access result",
              "title": "Access Granted"
            },
            "description": "Filter by access result"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLogListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access/location/{location_id}/logs": {
      "get": {
        "tags": [
          "access"
        ],
        "summary": "Get Location Access Logs",
        "description": "Get access logs for a specific location.\nReturns access history for the specified location.",
        "operationId": "get_location_access_logs_api_v1_access_location__location_id__logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Location Id"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          },
          {
            "name": "access_granted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by access result",
              "title": "Access Granted"
            },
            "description": "Filter by access result"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLogListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access/stats/summary": {
      "get": {
        "tags": [
          "access"
        ],
        "summary": "Get Access Summary",
        "description": "Get access statistics summary.\nReturns summary statistics for access attempts.",
        "operationId": "get_access_summary_api_v1_access_stats_summary_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for summary",
              "title": "Start Date"
            },
            "description": "Start date for summary"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for summary",
              "title": "End Date"
            },
            "description": "End date for summary"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/access/stats/hourly": {
      "get": {
        "tags": [
          "access"
        ],
        "summary": "Get Hourly Access Stats",
        "description": "Get hourly access statistics.\nReturns access attempts grouped by hour for a specific date.",
        "operationId": "get_hourly_access_stats_api_v1_access_stats_hourly_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date for hourly stats",
              "title": "Date"
            },
            "description": "Date for hourly stats"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/recognition/identify": {
      "post": {
        "tags": [
          "recognition"
        ],
        "summary": "Identify Face",
        "description": "Identify a person from a face image.\nProcesses the provided image and returns recognition results.",
        "operationId": "identify_face_api_v1_recognition_identify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecognitionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecognitionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/recognition/status": {
      "get": {
        "tags": [
          "recognition"
        ],
        "summary": "Get Recognition Status",
        "description": "Get face recognition service status.\nReturns information about the recognition service health and statistics.",
        "operationId": "get_recognition_status_api_v1_recognition_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/statistics/dashboard": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Dashboard Stats",
        "description": "Get dashboard statistics.\nReturns key metrics for the main dashboard.",
        "operationId": "get_dashboard_stats_api_v1_statistics_dashboard_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/statistics/access-trends": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Access Trends",
        "description": "Get access trends over time.\nReturns access statistics grouped by time periods.",
        "operationId": "get_access_trends_api_v1_statistics_access_trends_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 365,
              "minimum": 1,
              "description": "Number of days to analyze",
              "default": 30,
              "title": "Days"
            },
            "description": "Number of days to analyze"
          },
          {
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(hour|day|week)$",
              "description": "Grouping period",
              "default": "day",
              "title": "Group By"
            },
            "description": "Grouping period"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics/department-stats": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Department Statistics",
        "description": "Get statistics by department.\nReturns access statistics grouped by department.",
        "operationId": "get_department_statistics_api_v1_statistics_department_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analysis",
              "title": "Start Date"
            },
            "description": "Start date for analysis"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analysis",
              "title": "End Date"
            },
            "description": "End date for analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics/person-activity": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Person Activity Stats",
        "description": "Get person activity statistics.\nReturns access statistics for individual persons.",
        "operationId": "get_person_activity_stats_api_v1_statistics_person_activity_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analysis",
              "title": "Start Date"
            },
            "description": "Start date for analysis"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analysis",
              "title": "End Date"
            },
            "description": "End date for analysis"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Number of persons to return",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of persons to return"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(attempts|success_rate|last_access)$",
              "default": "attempts",
              "title": "Sort By"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics/location-stats": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Location Statistics",
        "description": "Get statistics by location.\nReturns access statistics grouped by location.",
        "operationId": "get_location_statistics_api_v1_statistics_location_stats_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analysis",
              "title": "Start Date"
            },
            "description": "Start date for analysis"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analysis",
              "title": "End Date"
            },
            "description": "End date for analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics/recognition-performance": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get Recognition Performance Stats",
        "description": "Get face recognition performance statistics.\nReturns statistics about recognition accuracy and performance.",
        "operationId": "get_recognition_performance_stats_api_v1_statistics_recognition_performance_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date for analysis",
              "title": "Start Date"
            },
            "description": "Start date for analysis"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date for analysis",
              "title": "End Date"
            },
            "description": "End date for analysis"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/statistics/system-health": {
      "get": {
        "tags": [
          "statistics"
        ],
        "summary": "Get System Health Stats",
        "description": "Get system health statistics.\nReturns various system health metrics and status information.",
        "operationId": "get_system_health_stats_api_v1_statistics_system_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/statistics/generate-report": {
      "post": {
        "tags": [
          "statistics"
        ],
        "summary": "Generate Custom Report",
        "description": "Generate a custom report.\nCreates a detailed report based on specified parameters.",
        "operationId": "generate_custom_report_api_v1_statistics_generate_report_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "report_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^(access|recognition|department|person|system)$",
              "title": "Report Type"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Report start date",
              "title": "Start Date"
            },
            "description": "Report start date"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Report end date",
              "title": "End Date"
            },
            "description": "Report end date"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(json|csv|pdf)$",
              "description": "Report format",
              "default": "json",
              "title": "Format"
            },
            "description": "Report format"
          },
          {
            "name": "include_charts",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include charts in report",
              "default": false,
              "title": "Include Charts"
            },
            "description": "Include charts in report"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/health": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Health Check",
        "description": "System health check endpoint.\nReturns basic system health information.",
        "operationId": "health_check_api_v1_system_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/system/info": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get System Info",
        "description": "Get system information.\nReturns detailed system information and statistics.",
        "operationId": "get_system_info_api_v1_system_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/system/logs": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get System Logs",
        "description": "Get system logs.\nReturns system logs with optional filtering.",
        "operationId": "get_system_logs_api_v1_system_logs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(DEBUG|INFO|WARNING|ERROR|CRITICAL)$"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          },
          {
            "name": "component",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by component",
              "title": "Component"
            },
            "description": "Filter by component"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start date filter",
              "title": "Start Date"
            },
            "description": "Start date filter"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End date filter",
              "title": "End Date"
            },
            "description": "End date filter"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Number of logs to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of logs to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of logs to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of logs to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/maintenance/cleanup": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Cleanup Old Data",
        "description": "Clean up old system data.\nRemoves old logs and inactive records based on retention policy.",
        "operationId": "cleanup_old_data_api_v1_system_maintenance_cleanup_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "days_to_keep",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 3650,
              "minimum": 1,
              "description": "Days of data to keep",
              "default": 90,
              "title": "Days To Keep"
            },
            "description": "Days of data to keep"
          },
          {
            "name": "dry_run",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Perform dry run without actual deletion",
              "default": true,
              "title": "Dry Run"
            },
            "description": "Perform dry run without actual deletion"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/maintenance/optimize": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Optimize Database",
        "description": "Optimize database performance.\nPerforms database maintenance operations like VACUUM and ANALYZE.",
        "operationId": "optimize_database_api_v1_system_maintenance_optimize_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/system/backup/create": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Create Backup",
        "description": "Create system backup.\nCreates a backup of the database and system data.",
        "operationId": "create_backup_api_v1_system_backup_create_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "backup_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(full|data|schema)$",
              "description": "Type of backup",
              "default": "full",
              "title": "Backup Type"
            },
            "description": "Type of backup"
          },
          {
            "name": "include_logs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include log tables in backup",
              "default": false,
              "title": "Include Logs"
            },
            "description": "Include log tables in backup"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/system/backup/list": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "List Backups",
        "description": "List available backups.\nReturns a list of available system backups.",
        "operationId": "list_backups_api_v1_system_backup_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/system/config": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get System Config",
        "description": "Get system configuration.\nReturns current system configuration settings.",
        "operationId": "get_system_config_api_v1_system_config_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "system"
        ],
        "summary": "Update System Config",
        "description": "Update system configuration.\nUpdates system configuration settings.",
        "operationId": "update_system_config_api_v1_system_config_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": true,
                "type": "object",
                "title": "Config Updates"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/system/restart": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Restart Service",
        "description": "Restart system components.\nRestarts specified system components.",
        "operationId": "restart_service_api_v1_system_restart_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "component",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(api|recognition|all)$",
              "description": "Component to restart",
              "default": "api",
              "title": "Component"
            },
            "description": "Component to restart"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Health check endpoint.",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessAttemptRequest": {
        "properties": {
          "person_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "access_method": {
            "type": "string",
            "title": "Access Method",
            "default": "face_recognition"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "additional_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Data"
          }
        },
        "type": "object",
        "required": [
          "location_id"
        ],
        "title": "AccessAttemptRequest",
        "description": "Access attempt request model."
      },
      "AccessControlResponse": {
        "properties": {
          "access_granted": {
            "type": "boolean",
            "title": "Access Granted"
          },
          "person_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "person_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Name"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "access_level_required": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Level Required"
          },
          "person_access_level": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Access Level"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "access_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Method"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "log_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Log Id"
          }
        },
        "type": "object",
        "required": [
          "access_granted"
        ],
        "title": "AccessControlResponse",
        "description": "Access control response model."
      },
      "AccessLogListResponse": {
        "properties": {
          "logs": {
            "items": {
              "$ref": "#/components/schemas/AccessLogResponse"
            },
            "type": "array",
            "title": "Logs"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "returned_count": {
            "type": "integer",
            "title": "Returned Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "logs",
          "total_count",
          "returned_count",
          "offset",
          "limit",
          "has_more"
        ],
        "title": "AccessLogListResponse",
        "description": "Access log list response model."
      },
      "AccessLogResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "person_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "person_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Name"
          },
          "location_id": {
            "type": "integer",
            "title": "Location Id"
          },
          "location_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Name"
          },
          "access_granted": {
            "type": "boolean",
            "title": "Access Granted"
          },
          "access_method": {
            "type": "string",
            "title": "Access Method"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "additional_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "uuid",
          "person_id",
          "person_name",
          "location_id",
          "location_name",
          "access_granted",
          "access_method",
          "confidence_score",
          "reason",
          "timestamp",
          "additional_data"
        ],
        "title": "AccessLogResponse",
        "description": "Access log response model."
      },
      "Body_upload_face_file_api_v1_faces_upload_file_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_face_file_api_v1_faces_upload_file_post"
      },
      "FaceFeatureResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "person_id": {
            "type": "integer",
            "title": "Person Id"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path"
          },
          "bbox": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bbox"
          },
          "landmarks": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Landmarks"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "feature_dimension": {
            "type": "integer",
            "title": "Feature Dimension"
          }
        },
        "type": "object",
        "required": [
          "id",
          "uuid",
          "person_id",
          "quality_score",
          "confidence_score",
          "is_primary",
          "is_active",
          "image_path",
          "bbox",
          "landmarks",
          "created_at",
          "updated_at",
          "feature_dimension"
        ],
        "title": "FaceFeatureResponse",
        "description": "Face feature response model."
      },
      "FaceFeatureUpdate": {
        "properties": {
          "set_as_primary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Set As Primary"
          },
          "is_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Active"
          }
        },
        "type": "object",
        "title": "FaceFeatureUpdate",
        "description": "Face feature update request model."
      },
      "FaceFeatureUpload": {
        "properties": {
          "person_id": {
            "type": "integer",
            "title": "Person Id"
          },
          "image_data": {
            "type": "string",
            "title": "Image Data"
          },
          "image_filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Filename"
          },
          "set_as_primary": {
            "type": "boolean",
            "title": "Set As Primary",
            "default": false
          },
          "quality_threshold": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Quality Threshold",
            "default": 0.7
          }
        },
        "type": "object",
        "required": [
          "person_id",
          "image_data"
        ],
        "title": "FaceFeatureUpload",
        "description": "Face feature upload request model."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PersonCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 2,
            "title": "Name"
          },
          "employee_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 20
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "department": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "position": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "access_level": {
            "type": "integer",
            "maximum": 10.0,
            "minimum": 0.0,
            "title": "Access Level",
            "default": 1
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PersonCreate",
        "description": "Person creation request model."
      },
      "PersonListResponse": {
        "properties": {
          "persons": {
            "items": {
              "$ref": "#/components/schemas/PersonResponse"
            },
            "type": "array",
            "title": "Persons"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "returned_count": {
            "type": "integer",
            "title": "Returned Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "limit": {
            "type": "integer",
            "title": "Limit"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "persons",
          "total_count",
          "returned_count",
          "offset",
          "limit",
          "has_more"
        ],
        "title": "PersonListResponse",
        "description": "Person list response model."
      },
      "PersonResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "uuid": {
            "type": "string",
            "title": "Uuid"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "employee_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employee Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Department"
          },
          "position": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "access_level": {
            "type": "integer",
            "title": "Access Level"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "face_feature_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Face Feature Count"
          },
          "last_access": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Access"
          }
        },
        "type": "object",
        "required": [
          "id",
          "uuid",
          "name",
          "employee_id",
          "email",
          "phone",
          "department",
          "position",
          "access_level",
          "is_active",
          "notes",
          "created_at",
          "updated_at"
        ],
        "title": "PersonResponse",
        "description": "Person response model."
      },
      "RecognitionRequest": {
        "properties": {
          "image_data": {
            "type": "string",
            "title": "Image Data"
          },
          "confidence_threshold": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Confidence Threshold",
            "default": 0.7
          },
          "max_results": {
            "type": "integer",
            "maximum": 20.0,
            "minimum": 1.0,
            "title": "Max Results",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "image_data"
        ],
        "title": "RecognitionRequest",
        "description": "Recognition request model."
      },
      "RecognitionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/RecognitionResult"
            },
            "type": "array",
            "title": "Results"
          },
          "total_faces_detected": {
            "type": "integer",
            "title": "Total Faces Detected"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time"
          },
          "image_quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Quality Score"
          }
        },
        "type": "object",
        "required": [
          "success",
          "results",
          "total_faces_detected",
          "processing_time"
        ],
        "title": "RecognitionResponse",
        "description": "Recognition response model."
      },
      "RecognitionResult": {
        "properties": {
          "person_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "person_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Name"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "similarity_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Score"
          },
          "face_bbox": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Face Bbox"
          },
          "face_landmarks": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Face Landmarks"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "matched_feature_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matched Feature Id"
          }
        },
        "type": "object",
        "title": "RecognitionResult",
        "description": "Recognition result model."
      },
      "ResponseStatus": {
        "type": "string",
        "enum": [
          "success",
          "error",
          "warning"
        ],
        "title": "ResponseStatus",
        "description": "API response status."
      },
      "SuccessResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ResponseStatus",
            "default": "success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "SuccessResponse",
        "description": "Success response model."
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in"
        ],
        "title": "TokenResponse",
        "description": "Token response model."
      },
      "UserCredentials": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "UserCredentials",
        "description": "User credentials model."
      },
      "UserInfo": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "is_active": {
            "type": "boolean",
            "title": "Is Active"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_login": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Login"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "full_name",
          "is_active",
          "permissions",
          "created_at",
          "last_login"
        ],
        "title": "UserInfo",
        "description": "User information model."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT认证令牌"
      }
    },
    "examples": {
      "SuccessResponse": {
        "summary": "成功响应",
        "value": {
          "status": "success",
          "message": "操作成功",
          "timestamp": "2024-01-15T10:30:00Z",
          "data": {}
        }
      },
      "ErrorResponse": {
        "summary": "错误响应",
        "value": {
          "status": "error",
          "message": "操作失败",
          "timestamp": "2024-01-15T10:30:00Z",
          "error_code": "VALIDATION_ERROR",
          "details": {}
        }
      },
      "UnauthorizedResponse": {
        "summary": "未授权",
        "value": {
          "detail": "Not authenticated"
        }
      },
      "ForbiddenResponse": {
        "summary": "权限不足",
        "value": {
          "detail": "Missing required permissions: write"
        }
      },
      "RateLimitResponse": {
        "summary": "请求频率超限",
        "value": {
          "detail": "Rate limit exceeded",
          "retry_after": 60
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "用户认证和令牌管理"
    },
    {
      "name": "user-management",
      "description": "系统用户管理（仅管理员）"
    },
    {
      "name": "persons",
      "description": "人员信息管理"
    },
    {
      "name": "faces",
      "description": "人脸特征管理"
    },
    {
      "name": "recognition",
      "description": "人脸识别服务"
    },
    {
      "name": "access",
      "description": "门禁控制和访问日志"
    },
    {
      "name": "statistics",
      "description": "统计报告和数据分析"
    },
    {
      "name": "system",
      "description": "系统管理和配置"
    }
  ]
}